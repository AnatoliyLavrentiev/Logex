<div class="modal-header">
    <h2 class="modal-title fw-bold text-primary w-100 text-center">
        <i class="fa-solid fa-box-open me-2"></i>Cr√©ation d'un nouveau produit
    </h2>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
</div>

<div class="modal-body text-center">
    {{ form_start(form, { 'action': path('product_new_modal'), 'attr': {'enctype': 'multipart/form-data'} }) }}

    <div class="mb-3">
        <label class="form-label fw-semibold d-block text-center">
            <i class="fa-solid fa-box me-2"></i>Nom du produit
        </label>
        {{ form_widget(form.prodname, {'attr': {'class': 'form-control'}}) }}
    </div>

    <div class="mb-3">
        <label class="form-label fw-semibold d-block text-center">
            <i class="fa-solid fa-barcode me-2"></i>R√©f√©rence
        </label>
        {{ form_widget(form.reference, {'attr': {'class': 'form-control'}}) }}
    </div>

    <div class="mb-3">
        <label class="form-label fw-semibold d-block text-center">
            <i class="fa-solid fa-align-left me-2"></i>Description
        </label>
        {{ form_widget(form.description, {'attr': {'class': 'form-control'}}) }}
    </div>

    <div class="mb-3">
        <label class="form-label fw-semibold d-block text-center">
            <i class="fa-solid fa-euro-sign me-2"></i>Prix (‚Ç¨)
        </label>
        {{ form_widget(form.price, {'attr': {'class': 'form-control'}}) }}
    </div>

    <div class="mb-3">
        <label class="form-label fw-semibold d-block text-center">
            <i class="fa-solid fa-weight-hanging me-2"></i>Poids (kg)
        </label>
        {{ form_widget(form.weight, {'attr': {'class': 'form-control'}}) }}
    </div>

    <div class="mb-3">
        <label class="form-label fw-semibold d-block text-center">
            <i class="fa-solid fa-folder-open me-2"></i>Cat√©gorie
        </label>
        {{ form_widget(form.category, {'attr': {'class': 'form-control'}}) }}
    </div>

    <div class="mb-3">
        <label class="form-label fw-semibold d-block text-center">
            <i class="fa-solid fa-image me-2"></i>Image du produit
        </label>
        {{ form_widget(form.imageFile, {'attr': {'class': 'form-control', 'id': 'imageInput', 'accept': 'image/*'}}) }}
    </div>

    <div class="text-center mb-3" id="previewContainer">
        <!-- Pr√©visualisation de l'image -->
    </div>

    <button type="submit" class="btn btn-success w-100 fs-5">
        <i class="fa-solid fa-floppy-disk me-2"></i>Cr√©er le produit
    </button>

    {{ form_end(form) }}
</div>



<script>
document.addEventListener("DOMContentLoaded", function () {
    console.log("üî• JS –∑–∞–≥—Ä—É–∂–µ–Ω! –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è #imageInput...");

    let observer = new MutationObserver(() => {
        let imageInput = document.querySelector("#imageInput");
        if (imageInput) {
            console.log("üü¢ `#imageInput` –ø–æ—è–≤–∏–ª—Å—è –≤ DOM!");
            setupFileInputListener();
            observer.disconnect(); // –û—Ç–∫–ª—é—á–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –Ω–∞–≥—Ä—É–∂–∞—Ç—å —Å–∏—Å—Ç–µ–º—É
        }
    });

    observer.observe(document.body, { childList: true, subtree: true });

    function setupFileInputListener() {
        let imageInput = document.querySelector("#imageInput");

        if (!imageInput) {
            console.warn("‚ö†Ô∏è `#imageInput` –Ω–µ –Ω–∞–π–¥–µ–Ω, –∂–¥—ë–º...");
            return;
        }

        console.log("‚úÖ –ù–∞–π–¥–µ–Ω input:", imageInput);

        imageInput.addEventListener("change", function (event) {
            console.log("üìÇ –§–∞–π–ª –≤—ã–±—Ä–∞–Ω!");

            let file = event.target.files[0];

            if (!file) {
                console.warn("‚ö†Ô∏è –§–∞–π–ª –Ω–µ –±—ã–ª –≤—ã–±—Ä–∞–Ω!");
                return;
            }

            console.log("üìå –í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª:", file.name, "| –¢–∏–ø:", file.type, "| –†–∞–∑–º–µ—Ä:", file.size, "–±–∞–π—Ç");

            if (!file.type.startsWith("image/")) {
                console.warn("‚ö†Ô∏è –í—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º.");
                return;
            }

            let reader = new FileReader();

            reader.onload = function (e) {
                console.log("üîÑ FileReader –∑–∞–≥—Ä—É–∑–∏–ª –¥–∞–Ω–Ω—ã–µ:", e.target.result);

                let previewContainer = document.querySelector("#previewContainer");
                if (!previewContainer) {
                    console.error("‚ùå –û—à–∏–±–∫–∞: #previewContainer –Ω–µ –Ω–∞–π–¥–µ–Ω!");
                    return;
                }

                let img = document.createElement("img");
                img.src = e.target.result;
                img.alt = "Pr√©visualisation";
                img.classList.add("img-thumbnail");
                img.style.maxWidth = "200px";
                img.style.display = "block";
                img.style.margin = "auto";

                previewContainer.innerHTML = "";
                previewContainer.appendChild(img);
            };

            reader.onerror = function () {
                console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ —á–µ—Ä–µ–∑ FileReader!");
            };

            reader.readAsDataURL(file);
        });
    }
});
</script>
